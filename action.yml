name: "Ward github action"
inputs:
  assetid:
    description: 'The id of the asset that it will get synced'
    required: true
    default: ''
  type:
    description: 'From where the sbom will be generated (image, repo, gradle, npm)'
    required: false
    default: ''
  registry:
    description: 'Docker registry of the images'
    required: false
    default: ''
  imagename:
    description: 'Name of docker image of the sbom'
    required: false
    default: ''
  client_id:
    description: 'API Key client from Ward platform'
    required: true
    default: ''
  client_secret:
    description: 'API Key from Ward platform'
    required: true
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Install Dependencies
      run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
      shell: bash

    - name: Build Gradle Jar
      if: ${{ inputs.type == 'gradle' }}
      run: |
        # Use Maven (or change this to your build tool, e.g., Gradle)
        chmod +x gradlew  # Ensure the wrapper is executable
        ./gradlew clean assemble
        ./gradlew sonar -x compileTestJava \
          -Dsonar.projectKey=${{ inputs.projectKey }} \
          -Dsonar.projectName=${{ inputs.projectName }} \
          -Dsonar.host.url=${{ inputs.sonarUrl }} \
          -Dsonar.login=${{ inputs.sonarToken }}
      shell: bash

    - name: Install Node.js Dependencies
      if: ${{ inputs.type == 'npm' }}
      run: |
        npm install
        npm run sonar-scanner -Dsonar.projectKey=${{ inputs.projectKey }} -Dsonar.projectName=${{ inputs.projectName }} -Dsonar.host.url=${{ inputs.sonarUrl }} -Dsonar.login=${{ inputs.sonarToken }}
      shell: bash

    - name: Generate sbom
      run: |
        if [ "${{ inputs.type }}" = "image" ]; then
          syft registry:${{ inputs.imagename }} -o cyclonedx-json=sbom.json
        else
          syft . -o cyclonedx-json=sbom.json
        fi
      shell: bash
    
    - name: Asset sync
      run: |
        req=$(curl -X POST 'https://keycloak-prod.maggioli-research.gr/auth/realms/ward/protocol/openid-connect/token' \
          -H 'Content-Type: application/x-www-form-urlencoded' \
          -d "grant_type=client_credentials&client_id=${{ inputs.client_id }}&client_secret=${{ inputs.client_secret }}")
        token=$(echo "$req" | grep -o '"access_token":"[^"]*' | awk -F'"' '{print $4}')
        response=$(curl -s -w "\nHTTP_STATUS:%{http_code}" -X POST "https://wardscan.com/ward-service/api/mitigate-scanner-service/asset/sync/${{ inputs.assetid }}" \
          -H 'accept: */*' \
          -H "Authorization: Bearer $token" \
          -H 'Content-Type: multipart/form-data' \
          -F 'file=@sbom.json;type=application/json')
    
        echo "$response"
      shell: bash
